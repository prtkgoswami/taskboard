{"version":3,"sources":["components/Header.js","components/Task.js","components/TaskForm.js","components/Constants.js","components/QueryUtilities.js","components/TaskGroup.js","components/PageListsMenu.js","components/PageList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","useState","isProfileMenuVisible","showProfileMenu","isDarkMode","switchMode","className","id","to","undefined","icon","faSun","type","onChange","htmlFor","faMoon","onClick","faUserCircle","href","Task","task","handleDelete","draggable","faPen","faTimes","TaskForm","taskGroupId","handleTaskCreation","hidePanel","action","onSubmit","e","preventDefault","nameInput","document","querySelector","descInput","taskName","value","taskDesc","CreateTask","name","placeholder","rows","cols","constants","graphql_uri","fontawesome_link","target","rel","react_link","tailwind_link","profile_link","sample_collection_data","collections","tasks","labels","collectionId","sample_labels_data","color","getAllLists","createList","listTitle","deleteList","listId","updateList","getAllTaskGroupsByListId","createTaskGroup","taskGroupTitle","deleteTaskGroup","groupId","updateTaskGroup","newTitle","getAllTasksByTaskGroup","group_id","createTask","description","labellist","deleteTask","task_id","updateTask","getAllLabels","getLabelsByTask","createLabel","deleteLabel","label_id","updateLabel","sendQuery","query","variables","console","log","axios","post","TaskGroup","taskgroup","handleGroupDelete","isEditable","enableEdit","setTasks","addTask","showTaskInput","DeleteTask","QueryUtilities","then","response","data","defaultValue","disabled","faPlus","length","map","index","newLabelId","i","item","prevData","PageListsMenu","lists","setLists","addNewList","showNewListInput","fetchLists","a","useEffect","list","state","list_id","list_name","listItem","DeleteList","faTrashAlt","faPlusCircle","listInput","listName","prevState","CreateList","PageList","taskGroups","setTaskGroups","setLabels","addTaskGroup","showTaskGroupInput","useParams","postSlug","useLocation","fetchTaskGroups","getAllTaskGroupsByList","fetchLabels","taskgroupName","CreateTaskGroup","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","element","getElementById","darkModeSwitch","addEventListener","checked","documentElement","classList","add","remove","collectionContainer","querySelectorAll","taskContainers","forEach","card","stopPropagation","contains","draggingCard","previousSibling","insertBefore","nextSibling","parentNode","container","afterElement","y","reduce","closest","child","box","getBoundingClientRect","offset","top","height","Number","NEGATIVE_INFINITY","getDragAfterElement","clientY","appendChild","label"],"mappings":"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","file":"static/js/main.ccc60fa4.chunk.js","sourcesContent":["import {React, useState} from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUserCircle, faSun, faMoon} from '@fortawesome/free-solid-svg-icons'\r\nimport './Header.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header({title}) {\r\n    const [isProfileMenuVisible, showProfileMenu] = useState(false);\r\n    const [isDarkMode, switchMode] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"w-full pt-3 pb-4 px-5 bg-gray-800 flex flex-row justify-between\">\r\n                <div id=\"header-left\" className=\"flex flex-col\">\r\n                    <p className=\"text-md text-left text-white font-semibold text-mono uppercase mb-3\">task manager</p>\r\n                    <p className=\"text-2xl text-left text-gray-300 font-mono\">\r\n                        <Link to=\"/\" className=\"transition-colors duration-200 hover:text-white\">Home</Link> {(title !== undefined) && `/ ${title}`}\r\n                    </p>\r\n                </div>\r\n\r\n                <div id=\"header-right\" className=\"flex flex-row content-start\">\r\n                    <div className=\"toggle px-4 py-1 flex flex-row justify-center content-start\">\r\n                        <span className={`text-xl px-2 ${!isDarkMode && \"text-yellow-400\"} ${isDarkMode && \"text-gray-300\"}`}>\r\n                            <FontAwesomeIcon icon={faSun}/>\r\n                        </span>\r\n                        <input type=\"checkbox\" id=\"dark-mode-switch\" onChange={() => {switchMode(!isDarkMode)}}/>\r\n                        <label htmlFor=\"dark-mode-switch\" className=\"\"> </label>\r\n                        <span className={`text-xl px-2 ${!isDarkMode && \"text-gray-300\"} ${isDarkMode && \"text-purple-500\"}`}>\r\n                            <FontAwesomeIcon icon={faMoon}/>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"text-3xl transition-colors duration-200 text-gray-300 hover:text-white cursor-pointer\" onClick={() => {showProfileMenu(!isProfileMenuVisible)}}>\r\n                        <FontAwesomeIcon icon={faUserCircle}/>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <div id=\"user-menu\" className={`bg-gray-50 text-black text-left py-4 w-1/3 md:w-1/6 absolute top-12 right-10 rounded-lg rounded-tr-none shadow-2xl transition-all duration-500 origin-top-right ${isProfileMenuVisible && \"transform scale-100\"} ${!isProfileMenuVisible && \"hidden transform scale-0\"}`}>\r\n                <a href='#'><p className=\"p-2 px-6  transition-colors duration-300 hover:bg-gray-200\">Profile</p></a>\r\n                <div className=\"divider border border-gray-200\"></div>\r\n                <a href='#'><p className=\"p-2 px-6  transition-colors duration-300 hover:bg-gray-200\">Help</p></a>\r\n                <a href='#'><p className=\"p-2 px-6  transition-colors duration-300 hover:bg-gray-200\">Sign Out</p></a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {React, useState} from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTimes, faPen} from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Task({task, handleDelete}) {\r\n    return (\r\n        <div id={task.id} className=\"task-card flex flex-col justify-between bg-gray-50 border rounded-md p-2 my-1\" draggable=\"true\">\r\n            <p className=\"text-left\">{task.title}</p>\r\n            <div className=\"flex flex-row justify-end\">\r\n                <div className=\"px-1 text-gray-800 inline-block transform-all duration-200 cursor-pointer hover:text-gray-50 hover:bg-blue-500 hover:shadow-xl\">\r\n                    <FontAwesomeIcon icon={faPen} className=\"text-xs\"/>\r\n                </div>\r\n                <div className=\"px-2 text-gray-800 inline-block transform-all duration-200 cursor-pointer hover:text-gray-50 hover:bg-red-500 hover:shadow-xl\" onClick={handleDelete}>\r\n                    <FontAwesomeIcon icon={faTimes} className=\"text-xs\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction TaskForm({taskGroupId, task, handleTaskCreation, hidePanel}) {\r\n    \r\n    function CreateTask(e) {\r\n        e.preventDefault()\r\n        const nameInput = document.querySelector('#task-name')\r\n        const descInput = document.querySelector('#task-desc')\r\n        const taskName = nameInput.value\r\n        const taskDesc = descInput.value\r\n        nameInput.value = \"\"\r\n        descInput.value = \"\"\r\n        handleTaskCreation(taskName, taskDesc)\r\n    }\r\n\r\n    return (\r\n        <div className=\"absolute left-0 right-0 flex justify-center z-10\">\r\n            <div className=\" w-1/2 top-32\">\r\n                <div className=\"flex flex-col pt-2 pb-10 bg-gray-100 shadow-2xl\">\r\n                    <div className=\"flex flex-row justify-end px-2\">\r\n                        <div className=\"px-3 py-1 bg-red-600 transition-all duration-300 hover:bg-red-700 text-white cursor-pointer\" onClick={hidePanel}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </div>\r\n                    </div>\r\n                    <form id=\"task-form\" action=\"\" className=\"flex flex-col text-center px-10\" onSubmit={(e) => {CreateTask(e)}}>\r\n                        <input type=\"text\" name=\"\" id=\"task-name\" placeholder=\"Task Name...\" className=\"m-2 bg-transparent focus:outline-none text-gray-800 border-b-2 border-gray-800 text-md p-2\"/>\r\n                        <textarea rows=\"4\" cols=\"50\" id=\"task-desc\" className=\"resize-none text-md p-2 bg-transparent border-2 border-gray-800 rounded-lg focus:outline-none m-2\" placeholder=\"Comments...\"/>\r\n                        <div className=\"labels-container border-2 border-gray-800 rounded-lg p-3 flex flex-col m-2\">\r\n                        <div className=\"selected-labels border-b-2 border-gray-300 p-2 flex flex-col\">\r\n                            <p className=\"text-left text-md font-mono text-gray-500 uppercase mb-2 underline\">Selected:</p>\r\n                            <div className=\"flex flex-row justify-start\">\r\n                            <div className=\"label-check cursor-pointer rounded-md inline-block shadow-lg px-4 py-1\">\r\n                                Label\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"unselected-labels p-2 flex flex-col\">\r\n                            <p className=\"text-left text-md font-mono text-gray-500 uppercase mb-2 underline\">Other Labels:</p>\r\n                            <div className=\"flex flex-row justify-start\">\r\n                            <div className=\"label-check cursor-pointer rounded-md inline-block shadow-lg px-4 py-1\" >\r\n                                Label\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"flex flex-row justify-center\">\r\n                            <input type=\"submit\" name=\"createTask\" value=\"Save Task\" id=\"\" className=\"w-1/2 m-2 p-2 border-2 border-gray-800 bg-transparent text-gray-800 transition-all duration-300 hover:bg-gray-800 hover:text-white\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react'\r\n\r\nconst constants = {\r\n  graphql_uri: '/graphql/',\r\n  fontawesome_link: <a href=\"https://fontawesome.com/\" \r\n                  target=\"_blank\" \r\n                  rel=\"nooperner noreferrer\" \r\n                  className=\"text-gray-200 italic\">FontAwesome</a>,\r\n  react_link: <a href=\"https://reactjs.org/\" \r\n                  target=\"_blank\" \r\n                  rel=\"nooperner noreferrer\" \r\n                  className=\"text-gray-200 italic\">React JS</a>,\r\n  tailwind_link: <a href=\"https://tailwindcss.com/\" \r\n                  target=\"_blank\" \r\n                  rel=\"nooperner noreferrer\" \r\n                  className=\"text-gray-200 italic\">Tailwind CSS</a>,\r\n  profile_link: <a href=\"http://prtkgoswami.github.io/\" \r\n                  target=\"_blank\" \r\n                  rel=\"nooperner noreferrer\">Pratik Goswami</a>,\r\n  sample_collection_data: [ \r\n    {\r\n      id: \"123876\",\r\n      title: \"List 1\",\r\n      collections: [\r\n        {\r\n          id: \"26351\",\r\n          title: \"Collection 1\",\r\n          tasks: [\r\n            {\r\n              id: \"914795\",\r\n              title: \"Task 1\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26351\",\r\n            },\r\n            {\r\n              id: \"914796\",\r\n              title: \"Task 2\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26351\",\r\n            },\r\n            {\r\n              id: \"914797\",\r\n              title: \"Exercitationem voluptatum neque a ea aut! Modi numquam id culpa quis.\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26351\",\r\n            },\r\n            {\r\n              id: \"914798\",\r\n              title: \"Task 4\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26351\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"26352\",\r\n          title: \"Collection 2\",\r\n          tasks: [\r\n            {\r\n              id: \"914799\",\r\n              title: \"Task 1\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26352\",\r\n            },\r\n            {\r\n              id: \"914800\",\r\n              title: \"Task 2\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26352\",\r\n            },\r\n            {\r\n              id: \"914801\",\r\n              title: \"Task 3\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26352\",\r\n            },\r\n            {\r\n              id: \"914802\",\r\n              title: \"Task 4\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26352\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"26353\",\r\n          title: \"Collection 3\",\r\n          tasks: [\r\n            {\r\n              id: \"914804\",\r\n              title: \"Task 1\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26353\",\r\n            },\r\n            {\r\n              id: \"914805\",\r\n              title: \"Task 2\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26353\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: \"26354\",\r\n          title: \"Collection 4\",\r\n          tasks: [],\r\n        },\r\n        {\r\n          id: \"26355\",\r\n          title: \"Collection 5\",\r\n          tasks: [\r\n            {\r\n              id: \"914806\",\r\n              title: \"Task 1\",\r\n              labels: [\"new\"],\r\n              collectionId: \"26355\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"123877\",\r\n      title: \"List 2 is the best one of all Lists in the Sample Data\",\r\n      collections: []\r\n    },\r\n    {\r\n      id: \"123878\",\r\n      title: \"List 3\",\r\n      collections: []\r\n    },\r\n    {\r\n      id: \"123879\",\r\n      title: \"List 4\",\r\n      collections: []\r\n    },\r\n  ],\r\n  sample_labels_data: [\r\n    {\r\n      id: \"29786\",\r\n      title: \"new\",\r\n      color: \"#F9FAFB\",\r\n    },\r\n    {\r\n      id: \"29787\",\r\n      title: \"in-progress\",\r\n      color: \"#FCD34D\",\r\n    },\r\n    {\r\n      id: \"29788\",\r\n      title: \"completed\",\r\n      color: \"#34D399\",\r\n    },\r\n    {\r\n      id: \"29789\",\r\n      title: \"cancelled\",\r\n      color: \"#EF4444\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default constants;","import React from 'react'\r\nimport axios from 'axios'\r\nimport { faMarsDouble } from '@fortawesome/free-solid-svg-icons'\r\nimport constants from './Constants'\r\n\r\nfunction getAllLists() {\r\n    return `\r\n        {\r\n            getAllLists {\r\n                id\r\n                title\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction createList(listTitle) {\r\n    return `\r\n        mutation {\r\n            createList (list: {title: \"${listTitle}\"}) {\r\n                id\r\n                title\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction deleteList(listId) {\r\n    return `\r\n        mutation {\r\n            deleteList(list_id: \"${listId}\")\r\n        }\r\n    `\r\n}\r\nfunction updateList(listId, listTitle) {\r\n    return `\r\n        mutation {\r\n            updateList (\r\n                list_id: \"${listId}\",\r\n                list: {title: \"${listTitle}\"}\r\n            ) {\r\n                id\r\n                title\r\n                taskGroups\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\nfunction getAllTaskGroupsByListId(listId) {\r\n    return `\r\n        {\r\n            getAllTaskGroupsByList (list_id: \"${listId}\") {\r\n                id\r\n                title\r\n                tasks {\r\n                    id\r\n                    title\r\n                    description\r\n                }\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\nfunction createTaskGroup(listId, taskGroupTitle) {\r\n    return `\r\n        mutation {\r\n            createTaskGroup (\r\n                list_id: \"${listId}\",\r\n                taskGroup: {title: \"${taskGroupTitle}\"}\r\n            ) {\r\n                id\r\n                title\r\n                tasks {\r\n                    id\r\n                    title\r\n                    description\r\n                    labels\r\n                }\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction deleteTaskGroup(listId, groupId) {\r\n    return `\r\n        mutation {\r\n            deleteTaskGroup (\r\n                list_id: \"${listId}\", \r\n                group_id: \"${groupId}\"\r\n              )\r\n        }\r\n    `\r\n}\r\nfunction updateTaskGroup(groupId, newTitle) {\r\n    return `\r\n        mutation {\r\n            updateTaskGroup (\r\n                group_id: \"${groupId}\",\r\n                taskGroup: {title: \"${newTitle}\"}\r\n            ) {\r\n                id\r\n                title\r\n                tasks {\r\n                    id\r\n                    title\r\n                    description\r\n                    labels\r\n                }\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\nfunction getAllTasksByTaskGroup(group_id) {\r\n    return `\r\n        {\r\n            getAllTasksByTaskGroup (group_id: \"${group_id}\") {\r\n                id\r\n                title\r\n                description\r\n                labels\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction createTask(group_id, title, description, labels) {\r\n    var labellist\r\n    if (labels === undefined || labels === [])\r\n        labellist = []\r\n    else\r\n        labellist = labels\r\n    return `\r\n        mutation {\r\n            createTask (\r\n                group_id: \"${group_id}\",\r\n                task: {\r\n                    title: \"${title}\",\r\n                    description: \"${description}\",\r\n                    labels: [\"${labellist}\"]\r\n                }\r\n            ) {\r\n                id\r\n                title\r\n                description\r\n                labels\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction deleteTask(group_id, task_id) {\r\n    return `\r\n        mutation {\r\n            deleteTask (\r\n                group_id: \"${group_id}\",\r\n                task_id: \"${task_id}\"\r\n            )\r\n        }\r\n    `\r\n}\r\nfunction updateTask(group_id, task_id, title, description, labels) {\r\n    return `\r\n        mutation {\r\n            updateTask (\r\n                group_id: \"${group_id}\",\r\n                task_id: \"${task_id}\",\r\n                task: {\r\n                    title: \"${title}\",\r\n                    description: \"${description}\",\r\n                    labels: ${labels}\r\n                }\r\n            ) {\r\n                id\r\n                title\r\n                description\r\n                labels\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\nfunction getAllLabels() {\r\n    return `\r\n        {\r\n            getAllLabels {\r\n                id\r\n                title\r\n                color\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction getLabelsByTask(group_id, task_id) {\r\n    return `\r\n        {\r\n            getLabelsByTask (\r\n                group_id: \"${group_id}\",\r\n                task_id: \"${task_id}\"\r\n            ) {\r\n                id\r\n                title\r\n                color\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction createLabel(title, color) {\r\n    return `\r\n        mutation {\r\n            createLabel (\r\n                label: {\r\n                    title: \"${title}\"\r\n                    color: \"${color}\"\r\n                }\r\n            ) {\r\n                id\r\n                title\r\n                color\r\n            }\r\n        }\r\n    `\r\n}\r\nfunction deleteLabel(label_id) {\r\n    return `\r\n        mutation {\r\n            deleteLabel (id: \"${label_id}\")\r\n        }\r\n    `\r\n}\r\nfunction updateLabel(label_id, title, color) {\r\n    return `\r\n        mutation {\r\n            updateLabel (\r\n                id : \"${label_id}\", \r\n                label: {\r\n                    title: \"${title}\",\r\n                    color: \"${color}\"\r\n                }\r\n            ) {\r\n                id\r\n                title\r\n                color\r\n            }\r\n        }\r\n    `\r\n}\r\n\r\nfunction sendQuery(query, variables) {\r\n    console.log(query)\r\n    return axios.post(constants.graphql_uri, {\r\n        query\r\n    });\r\n}\r\n\r\n\r\nexport default {\r\n    getAllLists,\r\n    createList,\r\n    deleteList,\r\n    updateList,\r\n    getAllTaskGroupsByListId,\r\n    createTaskGroup,\r\n    deleteTaskGroup,\r\n    updateTaskGroup,\r\n    getAllTasksByTaskGroup,\r\n    createTask,\r\n    deleteTask,\r\n    updateTask,\r\n    getAllLabels,\r\n    getLabelsByTask,\r\n    createLabel,\r\n    deleteLabel,\r\n    updateLabel,\r\n    sendQuery\r\n}\r\n","import {React, useState} from 'react'\r\nimport Task from './Task'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTimes, faPen, faPlus} from '@fortawesome/free-solid-svg-icons'\r\nimport TaskForm from './TaskForm'\r\nimport QueryUtilities from './QueryUtilities';\r\n\r\nfunction TaskGroup({taskgroup, labels, handleGroupDelete}) {\r\n    const [isEditable, enableEdit] = useState(false);\r\n    const [tasks, setTasks] = useState(taskgroup.tasks);\r\n    const [addTask, showTaskInput] = useState(false);\r\n\r\n    function UpdateTaskGroupName() {\r\n        // pass\r\n    }\r\n\r\n    function DeleteTaskGroup() {\r\n        // pass\r\n    }\r\n\r\n    function CreateTask(title, description) {\r\n        showTaskInput(false)\r\n        var newLabelId = \"\";\r\n        for (var i = 0; i < labels.length; i++) {\r\n            const item = labels[i]\r\n            if (item.title === \"new\") {\r\n                newLabelId = item.id\r\n                break\r\n            }\r\n        }\r\n\r\n        QueryUtilities.sendQuery(QueryUtilities.createTask(taskgroup.id, title, description, [newLabelId]))\r\n        .then(response => {\r\n            console.log(response)\r\n            setTasks(prevData => [...prevData, response.data.data.createTask])\r\n        })\r\n    }\r\n\r\n    function GetTasksbyGroup() {\r\n        QueryUtilities.sendQuery(QueryUtilities.getAllTasksByTaskGroup(taskgroup.id))\r\n        .then(response => {\r\n            console.log(response)\r\n            setTasks(response.data.data.getAllTasksByTaskGroup)\r\n        })\r\n    }\r\n\r\n    function DeleteTask(task_id) {\r\n        QueryUtilities.sendQuery(QueryUtilities.deleteTask(taskgroup.id, task_id))\r\n        .then(response => {\r\n            GetTasksbyGroup()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id={taskgroup.id} className=\"taskgroup-card w-full md:w-1/2 lg:w-1/4\" draggable=\"true\">\r\n                <div className=\"taskgroup-card-body p-2 pb-4 bg-gray-800 dark:bg-gray-400 cursor-pointer m-1 border border-transparent rounded-lg  shadow-2xl\">\r\n                    <div className=\"title-bar border-b border-gray-50 dark:border-gray-800 mb-2 py-1 flex flex-row justify-between\">\r\n                        <input type=\"text\" className=\"title-text disabled:bg-transparent text-lg text-left text-gray-800 disabled:text-gray-50 dark:text-gray-800 disabled:text-white\" \r\n                                defaultValue={taskgroup.title} disabled={!isEditable}/>\r\n                        <div className=\"button-group flex flex-row\">\r\n                            <div className=\"px-2 mx-1 rounded-sm hover:bg-blue-500 hover:bg-opacity-70 transition-all duration-500\" onClick={() => {enableEdit(!isEditable)}} title=\"Edit taskgroup Name\">\r\n                                <FontAwesomeIcon icon={faPen} className=\"text-gray-50 dark:text-gray-800\"/>\r\n                            </div>\r\n                            <div className=\"px-2 mx-1 rounded-sm hover:bg-green-500 hover:bg-opacity-70 transition-all duration-500\" title=\"Add New Task\">\r\n                                <FontAwesomeIcon icon={faPlus} className=\"text-gray-50 dark:text-gray-800\"/>\r\n                            </div>\r\n                            <div className=\"px-2 mx-1 rounded-sm hover:bg-red-600 hover:bg-opacity-70 transition-all duration-500\" title=\"Delete taskgroup\" onClick={handleGroupDelete}>\r\n                                <FontAwesomeIcon icon={faTimes} className=\"text-gray-50 dark:text-gray-800\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`task-container flex flex-col max-h-60 px-2 py-1 ${tasks.length > 0 && \"overflow-y-scroll\"}`}>\r\n                        {\r\n                            tasks.length > 0 && tasks.map((task, index) => (\r\n                                <Task key={task.id} task={task} handleDelete={() => DeleteTask(task.id)}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"new-task bg-gray-50 dark:bg-gray-800 bg-opacity-60 dark:bg-opacity-100 dark:text-gray-50 dark:hover:bg-opacity-90 hover:bg-opacity-70 border border-transparent rounded-md p-2 mx-2 mt-1 my-1\" onClick={() => {showTaskInput(true)}}>\r\n                        <p className=\"text-center\">New Task</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        \r\n\r\n            {\r\n                addTask && \r\n                <TaskForm taskGroupId={taskgroup.id} task={undefined} handleTaskCreation={(title, description) => CreateTask(title, description)} hidePanel={() => showTaskInput(false)}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskGroup\r\n","import {React, useState, useEffect} from 'react'\r\nimport constants from './Constants';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTrashAlt, faPlusCircle, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport QueryUtilities  from './QueryUtilities'\r\nimport {Header} from \".\"\r\n\r\nfunction PageListsMenu() {\r\n    // const [lists, setLists] = useState(constants.sample_collection_data);\r\n    const [lists, setLists] = useState([]);\r\n    const [addNewList, showNewListInput] = useState(false);\r\n    \r\n    const fetchLists = async () => {\r\n        QueryUtilities.sendQuery(QueryUtilities.getAllLists())\r\n        .then(response => {\r\n            console.log(response)\r\n            setLists(response.data.data.getAllLists)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        fetchLists();\r\n    }, []);\r\n\r\n    function CreateList() {\r\n        const listInput = document.querySelector('#new-list-input')\r\n        const listName = listInput.value\r\n        listInput.value = \"\"\r\n        showNewListInput(false)\r\n        console.log(\"Creating New List with name \" + listName)\r\n        QueryUtilities.sendQuery(QueryUtilities.createList(listName))\r\n        .then(response => {\r\n            console.log(response)\r\n            setLists(prevState => [...prevState, response.data.data.createList])\r\n        })\r\n    }\r\n\r\n    function DeleteList(listId) {\r\n        const listItem = document.querySelector(`#list-${listId}`)\r\n        console.log(\"Deleting \" + listId)\r\n        console.log(listItem)\r\n        QueryUtilities.sendQuery(QueryUtilities.deleteList(listId))\r\n        .then(response => {\r\n            console.log(response)\r\n            //setLists(response.data.data.deleteList)\r\n            fetchLists()\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className=\"flex flex-row justify-center\">\r\n                <div className=\"flex flex-row flex-wrap w-2/3 justify-start\">\r\n                    {\r\n                        lists.length === 0 && \r\n                        <p className=\"mt-20 w-full text-2xl md:text-4xl lg:text-6xl font-mono font-bold text-center text-gray-800 opacity-40 uppercase\">Start your First Project</p>\r\n                    }\r\n                    {\r\n                        lists.map((list) => (\r\n                            <div key={list.id} id={`list-${list.id}`} className=\"w-1/2 p-5\">\r\n                                <div className=\"bg-gray-200 h-full flex flex-col justify-between w-full p-5 border rounded-lg shadow-xl\">\r\n                                    <Link to={`/list/`} state={{list_id: list.id, list_name: list.title}} className=\"flex text-xl text-left text-gray-800 border-b border-gray-600 mb-5 cursor-pointer\">\r\n                                        <p>{list.title}</p>\r\n                                    </Link>\r\n                                    <div className=\"flex flex-row justify-between\">\r\n                                        {/* <p className=\"py-1 text-md text-gray-500\">{list.collections.length} Collections</p> */}\r\n                                        <div className=\"bg-transparent transition-all duration-300 hover:bg-red-600 border border-transparent rounded-md shadow-2xl text-gray-800 hover:text-white px-2 py-1 cursor-pointer\" onClick={() => {DeleteList(list.id)}}>\r\n                                            <FontAwesomeIcon icon={faTrashAlt} className=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <div className=\"w-1/2 p-5 flex flex-row justify-center\">\r\n                        <div className=\"bg-gray-200 bg-opacity-60 hover:bg-opacity-100 cursor-pointer h-full flex flex-col justify-between content-center w-full p-7 text-center border rounded-lg shadow-xl\" onClick={() => {showNewListInput(true)}}>\r\n                            <p><FontAwesomeIcon icon={faPlusCircle} className=\"text-5xl mb-3 text-gray-800 opacity-40\"/></p>\r\n                            <p className=\"text-xl font-light font-mono text-gray-800\">New List</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                {\r\n                    addNewList && \r\n                    <div className=\"absolute w-1/2 top-60\">\r\n                        <div className=\"flex flex-col pt-2 pb-10 bg-gray-100 shadow-2xl\">\r\n                            <div className=\"flex flex-row justify-end px-2\">\r\n                                <div className=\"px-3 py-1 bg-red-600 transition-all duration-300 hover:bg-red-700 text-white cursor-pointer\" onClick={() => {showNewListInput(false)}}>\r\n                                    <FontAwesomeIcon icon={faTimes}/>\r\n                                </div>\r\n                            </div>\r\n                            <form action=\"\" className=\"flex flex-col text-center px-10\" onSubmit={() => {CreateList()}}>\r\n                                <input type=\"text\" name=\"\" id=\"new-list-input\" placeholder=\"List Name...\" className=\"m-2 bg-transparent focus:outline-none text-gray-800 border-b-2 border-gray-800 text-xl p-2\"/>\r\n                                <div className=\"flex flex-row justify-center\">\r\n                                    <input type=\"submit\" name=\"createList\" value=\"Create List\" id=\"\" className=\"w-1/2 m-2 p-2 border-2 border-gray-800 bg-transparent text-gray-800 transition-all duration-300 hover:bg-gray-800 hover:text-white\"/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageListsMenu\r\n","import {React, useState, useEffect} from 'react'\r\nimport './TaskGroup'\r\nimport TaskGroup from './TaskGroup';\r\nimport constants from './Constants';\r\nimport './PageList.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTimes, faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport { useParams, useLocation } from \"react-router\";\r\nimport {Header} from \".\"\r\nimport QueryUtilities from './QueryUtilities';\r\n\r\nfunction PageList() {\r\n  // const [taskGroups, setTaskGroups] = useState(constants.sample_collection_data[0].collections);\r\n  // const [labels, setLabels] = useState(constants.sample_labels_data);\r\n  const [taskGroups, setTaskGroups] = useState([]);\r\n  const [labels, setLabels] = useState({});\r\n  const [addTaskGroup, showTaskGroupInput] = useState(false);\r\n  let {postSlug} = useParams();\r\n  const location = useLocation();\r\n  const {list_id, list_name} = location.state;\r\n\r\n  const fetchTaskGroups = async () => {\r\n    QueryUtilities.sendQuery(QueryUtilities.getAllTaskGroupsByListId(list_id))\r\n    .then(response => {\r\n        console.log(response)\r\n        setTaskGroups(response.data.data.getAllTaskGroupsByList)\r\n    })\r\n  }\r\n  const fetchLabels = async () => {\r\n    QueryUtilities.sendQuery(QueryUtilities.getAllLabels())\r\n    .then(response => {\r\n        console.log(response)\r\n        setLabels(response.data.data.getAllLabels)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n      fetchTaskGroups();\r\n      fetchLabels();\r\n  }, []);\r\n\r\n  function CreateTaskGroup(e) {\r\n    e.preventDefault()\r\n    const nameInput = document.querySelector('#taskgroup-name')\r\n    const taskgroupName = nameInput.value\r\n    nameInput.value = \"\"\r\n    console.log(taskgroupName)\r\n    showTaskGroupInput(false)\r\n    QueryUtilities.sendQuery(QueryUtilities.createTaskGroup(list_id, taskgroupName))\r\n    .then(response => {\r\n      console.log(response)\r\n      setTaskGroups(prevData => [...prevData, response.data.data.createTaskGroup])\r\n    })\r\n  }\r\n\r\n  function DeleteTaskGroup(group_id) {\r\n    QueryUtilities.sendQuery(QueryUtilities.deleteTaskGroup(list_id, group_id))\r\n    .then(response => {\r\n      console.log(response)\r\n      fetchTaskGroups()\r\n    })\r\n  }\r\n\r\n  // function EditTask(group_id, setTasks, tasks) {\r\n  //   showTaskInput(true);\r\n  //   setEdittingTask({\r\n  //       \"group_id\": group_id,\r\n  //       \"task_id\": task_id\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Header title={list_name}/>\r\n      <div className=\"flex flex-row justify-center\">\r\n        <div className=\"taskgroup-container w-full flex flex-row flex-wrap content-start px-10 mt-5\">\r\n          { \r\n            taskGroups.length > 0 && \r\n            taskGroups.map((taskgroup, index) => (\r\n              <TaskGroup key={taskgroup.id} taskgroup={taskgroup} labels={labels} handleGroupDelete={() => DeleteTaskGroup(taskgroup.id)}/>\r\n            ))\r\n          }\r\n          \r\n          <div id=\"new-taskgroup\" className=\"w-full md:w-1/2 lg:w-1/4\">\r\n              <div className=\"taskgroup-card-body p-4 bg-gray-400 bg-opacity-40 cursor-pointer text-center m-1 border border-transparent rounded-lg shadow-xl transition-all duration-200 hover:shadow-2xl hover:bg-opacity-60\" onClick={showTaskGroupInput}>\r\n                <p><FontAwesomeIcon icon={faPlusCircle} className=\"text-5xl mb-3 dark:text-gray-200 text-gray-800 opacity-40\"/></p>\r\n                <p className=\"text-xl font-light font-mono dark:text-gray-200 text-gray-800\">New Task Group</p>\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n          addTaskGroup && \r\n          <div className=\"absolute w-1/2 top-60\">\r\n              <div className=\"flex flex-col pt-2 pb-10 bg-gray-100 shadow-2xl\">\r\n                  <div className=\"flex flex-row justify-end px-2\">\r\n                      <div className=\"px-3 py-1 bg-red-600 transition-all duration-300 hover:bg-red-700 text-white cursor-pointer\" onClick={() => {showTaskGroupInput(false)}}>\r\n                          <FontAwesomeIcon icon={faTimes}/>\r\n                      </div>\r\n                  </div>\r\n                  <form action=\"\" className=\"flex flex-col text-center px-10\" onSubmit={(e) => {CreateTaskGroup(e)}}>\r\n                      <input type=\"text\" name=\"\" id=\"taskgroup-name\" placeholder=\"Task Group Name...\" className=\"m-2 bg-transparent focus:outline-none text-gray-800 border-b-2 border-gray-800 text-xl p-2\"/>\r\n                      <div className=\"flex flex-row justify-center\">\r\n                          <input type=\"submit\" name=\"CreateTaskGroup\" value=\"Create Task Group\" id=\"\" className=\"w-1/2 m-2 p-2 border-2 border-gray-800 bg-transparent text-gray-800 transition-all duration-300 hover:bg-gray-800 hover:text-white\"/>\r\n                      </div>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PageList;\r\n","import {React} from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport PageList from './components/PageList';\nimport PageListsMenu from './components/PageListsMenu';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* <Header title=\"\"/> */}\n\n      {/* <PageListsMenu/> */}\n      {/* <PageList/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport {PageListsMenu, PageList} from \"./components\"\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<PageListsMenu/>}/>\n      <Route path=\"/list\">\n        <Route path=\"\" element={<PageList />} />\n      </Route>\n    </Routes>\n  </Router>,\n\n  document.getElementById('root')\n);\n\n// Dark Mode Switcher\nconst darkModeSwitch = document.querySelector('#dark-mode-switch');\ndarkModeSwitch.addEventListener('change', () => {\n  if (darkModeSwitch.checked) {\n    document.documentElement.classList.add('dark')\n  } else {\n    document.documentElement.classList.remove('dark')\n  }\n})\n\n// Drag Drop Tasks & Collections\nconst collectionContainer = document.querySelector('.taskgroup-container');\nconst collections = document.querySelectorAll('.taskgroup-card');\nconst taskContainers = document.querySelectorAll('.task-container');\nconst tasks = document.querySelectorAll('.task-card');\n\ncollections.forEach(card => {\n  card.addEventListener('dragstart', e => {\n    e.stopPropagation();\n    console.log(\"Dragging \" + card.id);\n    card.classList.add('dragging','opacity-80');\n  })\n  card.addEventListener('dragend', e => {\n    e.stopPropagation();\n    card.classList.remove('dragging', 'opacity-80');\n  })\n  card.addEventListener('dragover', e => {\n    e.preventDefault()\n    e.stopPropagation();\n    if (!card.classList.contains('dragging')) {\n      const draggingCard = document.querySelector('.dragging');\n      if (draggingCard !== null && draggingCard.classList.contains('collection-card')) {\n        //console.log(\"Dragging over \" + card.id + \" \" + card.previousSibling);\n        if (card.previousSibling === undefined || card.previousSibling === null) {\n          collectionContainer.insertBefore(draggingCard, card);\n        } else {\n          collectionContainer.insertBefore(draggingCard, card.nextSibling);\n        }\n      }\n    }\n  })\n})\n\ntasks.forEach(card => {\n  card.addEventListener('dragstart', e => {\n    e.stopPropagation();\n    card.classList.add('task-dragging','opacity-80');\n    console.log(\"Current parent of task \" + card.id + \": \" + card.parentNode.parentNode.parentNode.id)\n  })\n  card.addEventListener('dragend', e => {\n    e.stopPropagation();\n    card.classList.remove('task-dragging', 'opacity-80');\n    console.log(\"Dropped parent of task \" + card.id + \": \" + card.parentNode.parentNode.parentNode.id)\n  })\n})\n\ntaskContainers.forEach(container => {\n  container.addEventListener('dragover', e => {\n    e.preventDefault()\n    e.stopPropagation();\n    const draggingCard = document.querySelector('.task-dragging')\n    if (draggingCard !== null && draggingCard.classList.contains('task-card')) {\n      const afterElement = getDragAfterElement(container, e.clientY)\n      if (afterElement == null) {\n        container.appendChild(draggingCard)\n      } else {\n        container.insertBefore(draggingCard, afterElement)\n      }\n    }\n  })\n})\n\nfunction getDragAfterElement(container, y) {\n  const otherTaskCards = [...container.querySelectorAll('.task-card:not(.task-dragging)')]\n\n  return otherTaskCards.reduce((closest, child) => {\n    const box = child.getBoundingClientRect()\n    const offset = y - box.top - box.height / 2\n    if (offset < 0 && offset > closest.offset) {\n      return { offset: offset, element: child }\n    } else {\n      return closest\n    }\n  }, { offset: Number.NEGATIVE_INFINITY }).element\n}\n\nconst labelChecks = document.querySelectorAll('.label-check')\nlabelChecks.forEach(label => {\n  label.addEventListener('click', () => {\n    if (label.classList.contains('active')) {\n      label.classList.remove('active', 'bg-blue-400')\n    } else {\n      label.classList.add('active', 'bg-blue-400')\n    }\n  })\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}